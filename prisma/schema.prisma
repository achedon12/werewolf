// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String   @id @default(cuid())
  email             String   @unique
  password          String
  name              String?
  nickname          String?  @unique
  avatar            String? // URL de l'avatar
  bio               String?  @default("")
  victories         Int      @default(0)
  games             Game[]   @relation("UserGames")
  wins              Game[]   @relation("GameWinners")
  verificationToken String?
  verified          Boolean  @default(false)
  role              String?  @default("user") // "user" ou "admin"
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now()) @updatedAt
  players           Player[]
  Game              Game[]
  ambientSoundsEnabled Boolean  @default(true)
}

model Player {
  id      String  @id @default(cuid())
  userId  String?
  user    User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  role    String?
  gameId  String?
  isAlive Boolean @default(true)
  isAdmin Boolean @default(false)
  game    Game?   @relation(fields: [gameId], references: [id], onDelete: Cascade)
}

model Game {
  id            String    @id @default(cuid())
  name          String
  type          String    @default("classic")
  configuration String    @default("{}")
  phase         String    @default("Nuit")
  state         String    @default("En attente")
  players       Player[]
  users         User[]    @relation("UserGames")
  winners       User[]    @relation("GameWinners")
  createdAt     DateTime  @default(now())
  gameLog       GameLog[]
  adminId       String?
  admin         User?     @relation(fields: [adminId], references: [id])
}

model GameLog {
  id        String   @id @default(cuid())
  gameId    String
  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  message   String
  createdAt DateTime @default(now())
}
